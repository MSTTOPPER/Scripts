function Library.addSlider(container, name, descriptionText, minValue, maxValue, defaultValue, callback)
    local hasDescription = descriptionText and descriptionText ~= ""
    local frameHeight = hasDescription and 70 or 50

    local SliderFrame = Instance.new("Frame")
    SliderFrame.Size = UDim2.new(1, 0, 0, frameHeight)
    SliderFrame.BackgroundColor3 = Colors.Background
    SliderFrame.BackgroundTransparency = 0.5
    SliderFrame.Parent = container
    addCorner(SliderFrame, 6)
    addStroke(SliderFrame, 2)

    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(1, -80, 0, 20)
    Label.Position = UDim2.new(0, 10, 0, 5)
    Label.Text = name
    Label.TextSize = 16
    Label.Font = Enum.Font.Gotham
    Label.TextColor3 = Colors.Text
    Label.BackgroundTransparency = 1
    Label.TextXAlignment = Enum.TextXAlignment.Left
    Label.Parent = SliderFrame

    if hasDescription then
        local Description = Instance.new("TextLabel")
        Description.Size = UDim2.new(1, -80, 0, 20)
        Description.Position = UDim2.new(0, 10, 0, 25)
        Description.Text = descriptionText
        Description.TextSize = 12
        Description.Font = Enum.Font.Gotham
        Description.BackgroundTransparency = 1
        Description.TextColor3 = Colors.Text
        Description.TextXAlignment = Enum.TextXAlignment.Left
        Description.Parent = SliderFrame
    end

    local TextBox = Instance.new("TextBox")
    TextBox.Size = UDim2.new(0, 60, 0, 24)
    TextBox.Position = UDim2.new(1, -70, 0, 5)
    TextBox.Text = tostring(defaultValue)
    TextBox.TextSize = 14
    TextBox.Font = Enum.Font.Gotham
    TextBox.TextColor3 = Colors.Text
    TextBox.BackgroundColor3 = Colors.DarkPrimary
    TextBox.BackgroundTransparency = 0.5
    TextBox.TextXAlignment = Enum.TextXAlignment.Center
    TextBox.Parent = SliderFrame
    addCorner(TextBox, 6)

    local Track = Instance.new("Frame")
    Track.Size = UDim2.new(1, -80, 0, 8)
    Track.Position = UDim2.new(0, 10, 1, -14)
    Track.BackgroundColor3 = Colors.DarkPrimary
    Track.Parent = SliderFrame
    addCorner(Track, 4)

    local Fill = Instance.new("Frame")
    Fill.Size = UDim2.new(0, 0, 1, 0)
    Fill.BackgroundColor3 = Colors.Primary
    Fill.Parent = Track
    addCorner(Fill, 4)

    local Thumb = Instance.new("Frame")
    Thumb.Size = UDim2.new(0, 24, 0, 24)
    Thumb.AnchorPoint = Vector2.new(0.5, 0.5)
    Thumb.BackgroundColor3 = Colors.LightPrimary
    Thumb.Position = UDim2.new(0, 0, 0.5, 0)
    Thumb.ZIndex = 2
    Thumb.Parent = Track
    addCorner(Thumb, 12)

    local function update(value)
        value = math.clamp(math.floor(value + 0.5), minValue, maxValue)
        local ratio = (value - minValue) / (maxValue - minValue)
        Fill.Size = UDim2.new(ratio, 0, 1, 0)
        Thumb.Position = UDim2.new(ratio, 0, 0.5, 0)
        TextBox.Text = tostring(value)
        callback(value)
    end

    Track.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            local function move(moveInput)
                local x = math.clamp((moveInput.Position.X - Track.AbsolutePosition.X) / Track.AbsoluteSize.X, 0, 1)
                update(minValue + x * (maxValue - minValue))
            end
            move(input)
            local conn = UserInputService.InputChanged:Connect(function(moveInput)
                if moveInput.UserInputType == Enum.UserInputType.MouseMovement or moveInput.UserInputType == Enum.UserInputType.Touch then
                    move(moveInput)
                end
            end)
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then conn:Disconnect() end
            end)
        end
    end)

    TextBox.FocusLost:Connect(function()
        local val = tonumber(TextBox.Text)
        if val then update(val) else update(defaultValue) end
    end)

    update(defaultValue)
end
