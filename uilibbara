local Library = {}

local coreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Clean up existing GUI if found
local existingGui = coreGui:FindFirstChild("xdd")
if existingGui then
    existingGui:Destroy()
end

-- Create main GUI container
local mainGui = Instance.new("ScreenGui")
mainGui.Parent = coreGui
mainGui.Name = "xdd"

-- Refined color scheme
local Colors = {
    Primary = Color3.fromRGB(45, 45, 55),           -- Dark slate for main backgrounds
    Secondary = Color3.fromRGB(60, 60, 70),         -- Slightly lighter for secondary elements
    Accent = Color3.fromRGB(90, 120, 220),          -- Blue accent color
    AccentDark = Color3.fromRGB(70, 90, 180),       -- Darker accent for hover states
    Text = Color3.fromRGB(240, 240, 245),           -- Near white text
    TextDimmed = Color3.fromRGB(180, 180, 190),     -- Dimmed text for descriptions
    Border = Color3.fromRGB(80, 80, 90),            -- Border color
    Success = Color3.fromRGB(80, 180, 120),         -- Green for positive states
    Error = Color3.fromRGB(220, 90, 90)             -- Red for negative states
}

-- Style configuration
local Style = {
    CornerRadius = 6,                    -- Default corner radius
    MainCornerRadius = 8,                -- Corner radius for main container
    ToggleCornerRadius = 10,             -- Corner radius for toggles
    ElementHeight = 40,                  -- Default height for elements
    ElementTransparency = 0.1,           -- Transparency for elements
    ContainerTransparency = 0.05,        -- Transparency for containers
    BorderThickness = 1,                 -- Border thickness
    Font = Enum.Font.GothamSemibold,     -- Default font
    FontSize = 14,                       -- Default font size
    SmallFontSize = 12,                  -- Smaller font size for descriptions
    ElementPadding = 8,                  -- Padding between elements
    ButtonHoverTween = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
}

-- Sounds
local Sounds = {
    Click = "rbxassetid://6333823611",
    Toggle = "rbxassetid://6333823611",
    Hover = "rbxassetid://6333984854",
    Success = "rbxassetid://6333823611"
}

-- Helper functions
local function addCorner(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or Style.CornerRadius)
    corner.Parent = instance
    return corner
end

local function addStroke(instance, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or Colors.Border
    stroke.Thickness = thickness or Style.BorderThickness
    stroke.Parent = instance
    return stroke
end

local function playSound(soundId, volume)
    local sound = Instance.new("Sound")
    sound.SoundId = soundId
    sound.Volume = volume or 0.5
    sound.PlayOnRemove = true
    sound.Parent = game:GetService("SoundService")
    sound:Destroy()
end

local function createShadow(parent, shadowSize)
    local shadow = Instance.new("ImageLabel")
    shadow.Size = UDim2.new(1, shadowSize or 20, 1, shadowSize or 20)
    shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://6014261993"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.6
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(49, 49, 450, 450)
    shadow.ZIndex = parent.ZIndex - 1
    shadow.Parent = parent
    return shadow
end

local function createRipple(parent)
    local ripple = Instance.new("Frame")
    ripple.Size = UDim2.new(0, 0, 0, 0)
    ripple.AnchorPoint = Vector2.new(0.5, 0.5)
    ripple.BackgroundColor3 = Colors.Text
    ripple.BackgroundTransparency = 0.8
    ripple.ZIndex = parent.ZIndex + 1
    ripple.Parent = parent
    addCorner(ripple, parent.AbsoluteSize.X)
    
    return function(position)
        local x = (position.X - parent.AbsolutePosition.X) / parent.AbsoluteSize.X
        local y = (position.Y - parent.AbsolutePosition.Y) / parent.AbsoluteSize.Y
        
        ripple.Position = UDim2.new(x, 0, y, 0)
        
        local tween = TweenService:Create(
            ripple,
            TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {
                Size = UDim2.new(1.5, 0, 1.5, 0),
                BackgroundTransparency = 1
            }
        )
        
        tween:Play()
        tween.Completed:Connect(function()
            ripple:Destroy()
        end)
    end
end

local function createButtonEffect(button)
    local createRippleEffect = createRipple(button)
    
    button.MouseButton1Down:Connect(function(x, y)
        createRippleEffect(Vector2.new(x, y))
    end)
    
    button.MouseEnter:Connect(function()
        TweenService:Create(
            button, 
            Style.ButtonHoverTween, 
            {BackgroundColor3 = Colors.Secondary}
        ):Play()
        playSound(Sounds.Hover, 0.2)
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(
            button, 
            Style.ButtonHoverTween, 
            {BackgroundColor3 = Colors.Primary}
        ):Play()
    end)
end

-- Default UI dimensions
local defaultWidth, defaultHeight = 600, 350

function Library:CreateUI(title, description, allowedUserIds)
    self.allowedUserIds = allowedUserIds or {}
    
    -- Play initial sound
    playSound("rbxassetid://6333823611", 0.5)
    
    -- Create main frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, defaultWidth, 0, defaultHeight)
    MainFrame.Position = UDim2.new(0.5, -defaultWidth / 2, 0.5, -defaultHeight / 2)
    MainFrame.BackgroundColor3 = Colors.Primary
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = mainGui
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.BackgroundTransparency = Style.ContainerTransparency
    addCorner(MainFrame, Style.MainCornerRadius)
    
    -- Add shadow
    createShadow(MainFrame)
    
    -- Create top bar
    local TopBar = Instance.new("Frame")
    TopBar.Size = UDim2.new(1, 0, 0, 40)
    TopBar.BackgroundColor3 = Colors.Secondary
    TopBar.BorderSizePixel = 0
    TopBar.BackgroundTransparency = Style.ContainerTransparency
    TopBar.ZIndex = 10
    TopBar.Parent = MainFrame
    addCorner(TopBar, Style.MainCornerRadius)
    
    -- Add bottom corner to fix the top bar appearance
    local BottomCornerFix = Instance.new("Frame")
    BottomCornerFix.Size = UDim2.new(1, 0, 0, 20)
    BottomCornerFix.Position = UDim2.new(0, 0, 1, -10)
    BottomCornerFix.BackgroundColor3 = Colors.Secondary
    BottomCornerFix.BorderSizePixel = 0
    BottomCornerFix.BackgroundTransparency = Style.ContainerTransparency
    BottomCornerFix.ZIndex = 9
    BottomCornerFix.Parent = TopBar
    
    -- Create resize button
    local ResizeButton = Instance.new("TextButton", MainFrame)
    ResizeButton.Size = UDim2.new(0, 20, 0, 20)
    ResizeButton.Position = UDim2.new(1, -25, 1, -25)
    ResizeButton.ZIndex = 15
    ResizeButton.BackgroundTransparency = 0.6
    ResizeButton.BackgroundColor3 = Colors.Secondary
    ResizeButton.Text = ""
    ResizeButton.Font = Style.Font
    ResizeButton.TextSize = Style.FontSize
    ResizeButton.TextColor3 = Colors.Text
    ResizeButton.BorderSizePixel = 0
    ResizeButton.AutoButtonColor = false
    addCorner(ResizeButton, 4)
    
    -- Resize icon
    local ResizeIcon = Instance.new("Frame")
    ResizeIcon.Size = UDim2.new(0, 10, 0, 1)
    ResizeIcon.Position = UDim2.new(0.5, -5, 0.5, 2)
    ResizeIcon.BackgroundColor3 = Colors.Text
    ResizeIcon.BorderSizePixel = 0
    ResizeIcon.ZIndex = 16
    ResizeIcon.Parent = ResizeButton
    
    local ResizeIcon2 = Instance.new("Frame")
    ResizeIcon2.Size = UDim2.new(0, 1, 0, 10)
    ResizeIcon2.Position = UDim2.new(0.5, 2, 0.5, -5)
    ResizeIcon2.BackgroundColor3 = Colors.Text
    ResizeIcon2.BorderSizePixel = 0
    ResizeIcon2.ZIndex = 16
    ResizeIcon2.Parent = ResizeButton
    
    -- Resize functionality
    local dragging = false
    local startPos
    local startSize
    
    local function beginDrag(input)
        dragging = true
        startPos = input.Position
        startSize = MainFrame.Size
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
    
    ResizeButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            beginDrag(input)
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - startPos
            MainFrame.Size = UDim2.new(
                startSize.X.Scale, math.max(300, startSize.X.Offset + delta.X),
                startSize.Y.Scale, math.max(200, startSize.Y.Offset + delta.Y)
            )
        end
    end)
    
    -- Settings overlay
    local SettingsOverlay = Instance.new("Frame")
    SettingsOverlay.Size = UDim2.new(1, 0, 1, 0)
    SettingsOverlay.Position = UDim2.new(0, 0, 0, 0)
    SettingsOverlay.ZIndex = 18
    SettingsOverlay.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
    SettingsOverlay.BackgroundTransparency = 0.5
    SettingsOverlay.Parent = MainFrame
    SettingsOverlay.Visible = false
    addCorner(SettingsOverlay, Style.MainCornerRadius)
    
    local SettingsFrame = Instance.new("Frame")
    SettingsFrame.Size = UDim2.new(0, 300, 0, 200)
    SettingsFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
    SettingsFrame.BackgroundColor3 = Colors.Secondary
    SettingsFrame.BackgroundTransparency = Style.ContainerTransparency
    SettingsFrame.Parent = SettingsOverlay
    SettingsFrame.ZIndex = 19
    addCorner(SettingsFrame, Style.MainCornerRadius)
    
    local SettingsTitle = Instance.new("TextLabel")
    SettingsTitle.Text = "Settings"
    SettingsTitle.TextSize = Style.FontSize + 2
    SettingsTitle.Font = Style.Font
    SettingsTitle.TextColor3 = Colors.Text
    SettingsTitle.BackgroundTransparency = 1
    SettingsTitle.Size = UDim2.new(1, 0, 0, 40)
    SettingsTitle.ZIndex = 20
    SettingsTitle.Parent = SettingsFrame
    
    local SettingsSeparator = Instance.new("Frame")
    SettingsSeparator.Size = UDim2.new(1, -40, 0, 1)
    SettingsSeparator.Position = UDim2.new(0, 20, 0, 40)
    SettingsSeparator.BackgroundColor3 = Colors.Border
    SettingsSeparator.BorderSizePixel = 0
    SettingsSeparator.ZIndex = 20
    SettingsSeparator.Parent = SettingsFrame
    
    -- Close button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -40, 0, 5)
    CloseButton.BackgroundTransparency = 0.3
    CloseButton.BackgroundColor3 = Colors.Error
    CloseButton.Text = "✕"
    CloseButton.ZIndex = 30
    CloseButton.TextSize = Style.FontSize + 2
    CloseButton.TextColor3 = Colors.Text
    CloseButton.Font = Style.Font
    CloseButton.Parent = TopBar
    addCorner(CloseButton, Style.CornerRadius)
    createButtonEffect(CloseButton)
    
    -- Settings button
    local SettingsButton = Instance.new("TextButton")
    SettingsButton.Size = UDim2.new(0, 30, 0, 30)
    SettingsButton.Position = UDim2.new(1, -80, 0, 5)
    SettingsButton.BackgroundTransparency = 0.3
    SettingsButton.BackgroundColor3 = Colors.Secondary
    SettingsButton.Text = "⚙️"
    SettingsButton.ZIndex = 30
    SettingsButton.TextSize = Style.FontSize
    SettingsButton.TextColor3 = Colors.Text
    SettingsButton.Font = Style.Font
    SettingsButton.Parent = TopBar
    addCorner(SettingsButton, Style.CornerRadius)
    createButtonEffect(SettingsButton)
    
    -- Confirmation overlay
    local ConfirmationOverlay = Instance.new("Frame")
    ConfirmationOverlay.Size = UDim2.new(1, 0, 1, 0)
    ConfirmationOverlay.Position = UDim2.new(0, 0, 0, 0)
    ConfirmationOverlay.ZIndex = 18
    ConfirmationOverlay.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
    ConfirmationOverlay.BackgroundTransparency = 0.5
    ConfirmationOverlay.Parent = MainFrame
    ConfirmationOverlay.Visible = false
    addCorner(ConfirmationOverlay, Style.MainCornerRadius)
    
    local ConfirmationWindow = Instance.new("Frame")
    ConfirmationWindow.Size = UDim2.new(0, 300, 0, 150)
    ConfirmationWindow.Position = UDim2.new(0.5, -150, 0.5, -75)
    ConfirmationWindow.BackgroundColor3 = Colors.Secondary
    ConfirmationWindow.BackgroundTransparency = Style.ContainerTransparency
    ConfirmationWindow.Parent = ConfirmationOverlay
    ConfirmationWindow.ZIndex = 19
    addCorner(ConfirmationWindow, Style.MainCornerRadius)
    
    local ConfirmationText = Instance.new("TextLabel")
    ConfirmationText.Text = "Are you sure you want to close the GUI?"
    ConfirmationText.TextSize = Style.FontSize
    ConfirmationText.Font = Style.Font
    ConfirmationText.TextColor3 = Colors.Text
    ConfirmationText.BackgroundTransparency = 1
    ConfirmationText.Size = UDim2.new(1, 0, 0, 70)
    ConfirmationText.ZIndex = 20
    ConfirmationText.Parent = ConfirmationWindow
    
    local ConfirmButton = Instance.new("TextButton")
    ConfirmButton.Text = "Yes"
    ConfirmButton.ZIndex = 20
    ConfirmButton.TextSize = Style.FontSize
    ConfirmButton.Font = Style.Font
    ConfirmButton.TextColor3 = Colors.Text
    ConfirmButton.BackgroundColor3 = Colors.Error
    ConfirmButton.BackgroundTransparency = 0.2
    ConfirmButton.Size = UDim2.new(0.45, -5, 0, 40)
    ConfirmButton.Position = UDim2.new(0, 10, 1, -50)
    ConfirmButton.Parent = ConfirmationWindow
    addCorner(ConfirmButton, Style.CornerRadius)
    createButtonEffect(ConfirmButton)
    
    local CancelButton = Instance.new("TextButton")
    CancelButton.Text = "No"
    CancelButton.TextSize = Style.FontSize
    CancelButton.ZIndex = 20
    CancelButton.Font = Style.Font
    CancelButton.TextColor3 = Colors.Text
    CancelButton.BackgroundColor3 = Colors.Success
    CancelButton.BackgroundTransparency = 0.2
    CancelButton.Size = UDim2.new(0.45, -5, 0, 40)
    CancelButton.Position = UDim2.new(0.55, 0, 1, -50)
    CancelButton.Parent = ConfirmationWindow
    addCorner(CancelButton, Style.CornerRadius)
    createButtonEffect(CancelButton)
    
    CloseButton.MouseButton1Click:Connect(function()
        playSound(Sounds.Click)
        ConfirmationOverlay.Visible = true
    end)
    
    ConfirmButton.MouseButton1Click:Connect(function()
        playSound(Sounds.Success)
        MainFrame:Destroy()
    end)
    
    CancelButton.MouseButton1Click:Connect(function()
        playSound(Sounds.Click)
        ConfirmationOverlay.Visible = false
    end)
    
    SettingsButton.MouseButton1Click:Connect(function()
        playSound(Sounds.Click)
        SettingsOverlay.Visible = not SettingsOverlay.Visible
    end)
    
    -- Separator line
    local Line = Instance.new("Frame")
    Line.Size = UDim2.new(1, 0, 0, 1)
    Line.Position = UDim2.new(0, 0, 0, 40)
    Line.BackgroundColor3 = Colors.Border
    Line.BorderSizePixel = 0
    Line.ZIndex = 12
    Line.Parent = TopBar
    
    -- Title label
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(0, 200, 1, -5)
    TitleLabel.Position = UDim2.new(0, 15, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title or "New UI"
    TitleLabel.ZIndex = 11
    TitleLabel.TextSize = Style.FontSize + 2
    TitleLabel.TextColor3 = Colors.Text
    TitleLabel.Font = Style.Font
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TopBar
    
    -- Description label
    local DescriptionLabel = Instance.new("TextLabel")
    DescriptionLabel.Size = UDim2.new(0, 200, 1, -5)
    DescriptionLabel.Position = UDim2.new(1, -280, 0, 0)
    DescriptionLabel.BackgroundTransparency = 1
    DescriptionLabel.Text = description or ""
    DescriptionLabel.TextSize = Style.SmallFontSize
    DescriptionLabel.ZIndex = 11
    DescriptionLabel.TextColor3 = Colors.TextDimmed
    DescriptionLabel.Font = Style.Font
    DescriptionLabel.TextXAlignment = Enum.TextXAlignment.Right
    DescriptionLabel.Parent = TopBar
    
    -- Create tabs container
    local TabsContainer = Instance.new("ScrollingFrame")
    TabsContainer.Size = UDim2.new(0.25, 0, 1, -40)
    TabsContainer.Position = UDim2.new(0, 0, 0, 40)
    TabsContainer.BackgroundColor3 = Colors.Primary
    TabsContainer.BorderSizePixel = 0
    TabsContainer.CanvasSize = UDim2.new(0, 0, 0, 0)
    TabsContainer.ScrollBarThickness = 4
    TabsContainer.ScrollBarImageColor3 = Colors.Accent
    TabsContainer.Parent = MainFrame
    TabsContainer.BackgroundTransparency = 1
    
    local TabsListLayout = Instance.new("UIListLayout")
    TabsListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabsListLayout.Padding = UDim.new(0, Style.ElementPadding)
    TabsListLayout.Parent = TabsContainer
    
    local TabsPadding = Instance.new("UIPadding")
    TabsPadding.PaddingTop = UDim.new(0, Style.ElementPadding)
    TabsPadding.PaddingLeft = UDim.new(0, Style.ElementPadding)
    TabsPadding.PaddingRight = UDim.new(0, Style.ElementPadding)
    TabsPadding.Parent = TabsContainer
    
    TabsListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        TabsContainer.CanvasSize = UDim2.new(0, 0, 0, TabsListLayout.AbsoluteContentSize.Y)
    end)
    
    -- Create content container
    local Container = Instance.new("Frame")
    Container.Size = UDim2.new(0.75, 0, 1, -40)
    Container.Position = UDim2.new(0.25, 0, 0, 40)
    Container.BackgroundColor3 = Colors.Primary
    Container.BorderSizePixel = 0
    Container.Parent = MainFrame
    Container.BackgroundTransparency = 1
    
    -- Create toggle button
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "xdd"
    screenGui.Parent = coreGui
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0, 40, 0, 40)
    toggleButton.Position = UDim2.new(0.03, 0, 0.1, 0)
    toggleButton.Text = "≡"
    toggleButton.Font = Style.Font
    toggleButton.TextSize = 20
    toggleButton.TextColor3 = Colors.Text
    toggleButton.BackgroundTransparency = 0.3
    toggleButton.Draggable = true
    toggleButton.BorderSizePixel = 0
    toggleButton.BackgroundColor3 = Colors.Accent
    toggleButton.Parent = screenGui
    addCorner(toggleButton, Style.CornerRadius)
    addStroke(toggleButton, Colors.Border)
    createShadow(toggleButton)
    
    local isActive = true
    
    local function toggleUI()
        isActive = not isActive
        MainFrame.Visible = isActive
        playSound(Sounds.Click)
        
        -- Animation
        TweenService:Create(
            toggleButton, 
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = isActive and Colors.Accent or Colors.Secondary}
        ):Play()
        
        toggleButton:TweenSize(
            UDim2.new(0, 50, 0, 50), 
            Enum.EasingDirection.Out, 
            Enum.EasingStyle.Quad, 
            0.2, 
            true
        )
        
        wait(0.2)
        
        toggleButton:TweenSize(
            UDim2.new(0, 40, 0, 40), 
            Enum.EasingDirection.Out, 
            Enum.EasingStyle.Quad, 
            0.2, 
            true
        )
    end
    
    toggleButton.MouseButton1Click:Connect(toggleUI)
    
    -- Premium check function
    local function isPlayerPremium(player)
        for _, id in ipairs(self.allowedUserIds) do
            if player.UserId == id then
                return true
            end
        end
        return false
    end
    
    local player = game:GetService("Players").LocalPlayer
    local isPremium = isPlayerPremium(player)
    if isPremium then
        print(player.Name .. " has premium access.")
    else
        print(player.Name .. " does not have premium access.")
    end
    
    -- Tab management
    local Tab = {
        TabsContainer = TabsContainer, 
        Container = Container,
        ActiveTab = nil
    }
    
    function Tab:AddTab(isallowedUserIds, tabName)
        local tabButton = Instance.new("TextButton")
        tabButton.Size = UDim2.new(1, 0, 0, Style.ElementHeight)
        tabButton.Text = tabName
        tabButton.Font = Style.Font
        tabButton.TextSize = Style.FontSize
        tabButton.BackgroundColor3 = Colors.Primary
        tabButton.TextColor3 = Colors.Text
        tabButton.BackgroundTransparency = Style.ElementTransparency
        tabButton.Parent = TabsContainer
        addCorner(tabButton, Style.CornerRadius)
        addStroke(tabButton, Colors.Border)
        
        local tabIcon = Instance.new("TextLabel")
        tabIcon.Size = UDim2.new(0, 20, 0, 20)
        tabIcon.Position = UDim2.new(0, 10, 0.5, -10)
        tabIcon.BackgroundTransparency = 1
        tabIcon.Text = "▶"
        tabIcon.TextSize = Style.FontSize
        tabIcon.Font = Style.Font
        tabIcon.TextColor3 = Colors.Accent
        tabIcon.Parent = tabButton
        
        local tabLabel = Instance.new("TextLabel")
        tabLabel.Size = UDim2.new(1, -50, 1, 0)
        tabLabel.Position = UDim2.new(0, 40, 0, 0)
        tabLabel.BackgroundTransparency = 1
        tabLabel.Text = tabName
        tabLabel.TextSize = Style.FontSize
        tabLabel.Font = Style.Font
        tabLabel.TextColor3 = Colors.Text
        tabLabel.TextXAlignment = Enum.TextXAlignment.Left
        tabLabel.Parent = tabButton
        
        local tabFrame = Instance.new("Frame")
        tabFrame.Size = UDim2.new(1, -Style.ElementPadding * 2, 1, -Style.ElementPadding * 2)
        tabFrame.Position = UDim2.new(0, Style.ElementPadding, 0, Style.ElementPadding)
        tabFrame.BackgroundColor3 = Colors.Primary
        tabFrame.BackgroundTransparency = 1
        tabFrame.Visible = false
        tabFrame.Parent = Container
        
        local frameScroll = Instance.new("ScrollingFrame")
        frameScroll.Size = UDim2.new(1, 0, 1, 0)
        frameScroll.Position = UDim2.new(0, 0, 0, 0)
        frameScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
        frameScroll.ScrollBarThickness = 4
        frameScroll.ScrollBarImageColor3 = Colors.Accent
        frameScroll.BackgroundColor3 = Colors.Primary
        frameScroll.BackgroundTransparency = 1
        frameScroll.ScrollingDirection = Enum.ScrollingDirection.Y
        frameScroll.Parent = tabFrame
        
        local buttonLayout = Instance.new("UIListLayout")
        buttonLayout.Padding = UDim.new(0, Style.ElementPadding)
        buttonLayout.SortOrder = Enum.SortOrder.LayoutOrder
        buttonLayout.Parent = frameScroll
        
        local padding = Instance.new("UIPadding")
        padding.PaddingLeft = UDim.new(0, Style.ElementPadding)
        padding.PaddingRight = UDim.new(0, Style.ElementPadding)
        padding.Parent = frameScroll
        
        buttonLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            frameScroll.CanvasSize = UDim2.new(0, 0, 0, buttonLayout.AbsoluteContentSize.Y)
        end)
        
        createButtonEffect(tabButton)
        
        tabButton.MouseButton1Click:Connect(function()
            playSound(Sounds.Click)
            
            -- Update tab button states
            for _, button in pairs(TabsContainer:GetChildren()) do
                if button:IsA("TextButton") then
                    button.BackgroundColor3 = Colors.Primary
                end
            end
            
            tabButton.BackgroundColor3 = Colors.Accent
            
            -- Hide all tab content and show this one
            for _, frame in pairs(Container:GetChildren()) do
                if frame
