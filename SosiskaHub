local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\124\72","\97\82\102\90\222"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,2 -1 ));return "";else local v93=0;local v94;while true do if (v93==0) then v94=v10(v8(v42,16));if v30 then local v122=0;local v123;while true do if (v122==0) then v123=v13(v94,v30);v30=nil;v122=1;end if (v122==1) then return v123;end end else return v94;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v95=0;local v96;while true do if (v95==0) then v96=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v96-(v96%1) ;end end else local v97=0;local v98;while true do if (v97==0) then v98=2^(v44-1) ;return (((v43%(v98 + v98))>=v98) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (1==v46) then return v47;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * (732 -476)) + v48 ;end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end if (1==v50) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==1) then v58=1;v59=(v31(v57,1,20) * (2^(61 -29))) + v56 ;v55=2;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -1) or (2 -1) ;v55=3;end if (3==v55) then if (v60==0) then if (v59==0) then return v61 * 0 ;else local v124=0;while true do if (v124==0) then v60=1;v58=0;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==2) then v65={};for v103=1, #v64 do v65[v103]=v10(v9(v11(v64,v103,v103)));end v63=3;end if (v63==0) then v64=nil;if  not v62 then local v117=0;while true do if (v117==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=1;end if (v63==3) then return v14(v65);end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -(620 -(555 + 64)) );v29=v29 + v62 ;v63=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66=0;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v66==1) then v71=v34();v72={};for v105=1,v71 do local v106=0;local v107;local v108;while true do if (v106==0) then v107=v32();v108=nil;v106=1;end if (v106==1) then if (v107==(932 -(857 + 74))) then v108=v32()~=0 ;elseif (v107==2) then v108=v35();elseif (v107==3) then v108=v36();end v72[v105]=v108;break;end end end v70[3]=v32();v66=2;end if (v66==2) then for v109=1,v34() do local v110=v32();if (v31(v110,569 -(367 + 201) ,1)==0) then local v118=0;local v119;local v120;local v121;while true do if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==0) then v121[3]=v33();v121[4]=v33();elseif (v119==1) then v121[930 -(214 + 713) ]=v34();elseif (v119==2) then v121[3]=v34() -(2^(5 + 11)) ;elseif (v119==3) then v121[3]=v34() -(2^16) ;v121[4]=v33();end v118=2;end if (v118==0) then v119=v31(v110,2,3);v120=v31(v110,4,6);v118=1;end if (v118==2) then if (v31(v120,1,1)==1) then v121[2]=v72[v121[2]];end if (v31(v120,1 + 1 ,2)==1) then v121[880 -(282 + 595) ]=v72[v121[3]];end v118=3;end if (3==v118) then if (v31(v120,3,3)==1) then v121[4]=v72[v121[4]];end v67[v109]=v121;break;end end end end for v111=1,v34() do v68[v111-(1638 -(1523 + 114)) ]=v39();end return v70;end if (v66==0) then v67={};v68={};v69={};v70={v67,v68,nil,v69};v66=1;end end end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[3];return function(...) local v79=v76;local v80=v77;local v81=v78;local v82=v38;local v83=1;local v84= -1;local v85={};local v86={...};local v87=v20("#",...) -1 ;local v88={};local v89={};for v99=0,v87 do if (v99>=v81) then v85[v99-v81 ]=v86[v99 + 1 ];else v89[v99]=v86[v99 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do v91=v79[v83];v92=v91[1];if (v92<=38) then if (v92<=18) then if (v92<=(8 + 0)) then if (v92<=3) then if (v92<=1) then if (v92==0) then v89[v91[2]]={};else local v137=0;local v138;while true do if (v137==0) then v138=v91[2];do return v89[v138](v21(v89,v138 + (1 -0) ,v91[3]));end break;end end end elseif (v92>2) then local v139=0;local v140;while true do if (v139==0) then v140=v91[1067 -(68 + 997) ];v89[v140]=v89[v140](v21(v89,v140 + 1 ,v84));break;end end elseif  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=5) then if (v92==(1274 -(226 + 1044))) then local v141=v91[8 -6 ];local v142,v143=v82(v89[v141](v89[v141 + 1 ]));v84=(v143 + v141) -1 ;local v144=0;for v235=v141,v84 do v144=v144 + 1 ;v89[v235]=v142[v144];end else v89[v91[2]]=v91[3] + v89[v91[4]] ;end elseif (v92<=6) then v89[v91[119 -(32 + 85) ]]();elseif (v92>7) then v89[v91[2 + 0 ]]=v89[v91[3]][v91[4]];else v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;end elseif (v92<=(3 + 10)) then if (v92<=10) then if (v92==9) then v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;else local v147=0;local v148;local v149;while true do if (v147==1) then v89[v148 + 1 ]=v149;v89[v148]=v149[v91[4]];break;end if (0==v147) then v148=v91[959 -(892 + 65) ];v149=v89[v91[3]];v147=1;end end end elseif (v92<=11) then local v150=v91[2];local v151=v89[v150];for v238=v150 + 1 ,v84 do v15(v151,v89[v238]);end elseif (v92>12) then v83=v91[3];else v89[v91[2]]=v75[v91[3]];end elseif (v92<=15) then if (v92==14) then v89[v91[2]][v89[v91[7 -4 ]]]=v89[v91[4]];else do return;end end elseif (v92<=(29 -13)) then v89[v91[2]]=v91[3]~=0 ;elseif (v92>(31 -14)) then do return v89[v91[2]]();end else local v248=0;local v249;while true do if (0==v248) then v249=v91[352 -(87 + 263) ];v89[v249](v21(v89,v249 + 1 ,v84));break;end end end elseif (v92<=28) then if (v92<=23) then if (v92<=20) then if (v92>19) then local v155=0;local v156;while true do if (v155==0) then v156=v91[2];do return v21(v89,v156,v84);end break;end end else local v157=0;local v158;local v159;local v160;while true do if (1==v157) then v160=v89[v158 + 2 ];if (v160>0) then if (v159>v89[v158 + 1 ]) then v83=v91[3];else v89[v158 + 3 ]=v159;end elseif (v159<v89[v158 + 1 ]) then v83=v91[3];else v89[v158 + 3 ]=v159;end break;end if (0==v157) then v158=v91[2];v159=v89[v158];v157=1;end end end elseif (v92<=21) then local v161=v91[2];local v162=v89[v161 + 2 ];local v163=v89[v161] + v162 ;v89[v161]=v163;if (v162>0) then if (v163<=v89[v161 + 1 ]) then local v322=0;while true do if (v322==0) then v83=v91[3];v89[v161 + 3 ]=v163;break;end end end elseif (v163>=v89[v161 + 1 ]) then v83=v91[3];v89[v161 + 3 ]=v163;end elseif (v92>22) then v89[v91[2]]=v91[183 -(67 + 113) ];elseif v89[v91[2 + 0 ]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=(61 -36)) then if (v92==24) then v89[v91[2]]=v91[3 + 0 ]~=0 ;else local v166=0;local v167;local v168;while true do if (v166==0) then v167=v91[7 -5 ];v168=v89[v167];v166=1;end if (v166==1) then for v326=v167 + 1 ,v84 do v15(v168,v89[v326]);end break;end end end elseif (v92<=26) then local v169=0;local v170;local v171;local v172;while true do if (v169==0) then v170=v80[v91[955 -(802 + 150) ]];v171=nil;v169=1;end if (v169==1) then v172={};v171=v18({},{[v7("\17\148\66\201\83\169\54","\204\78\203\43\167\55")]=function(v327,v328) local v329=v172[v328];return v329[1][v329[2]];end,[v7("\110\154\164\38\9\181\95\161\175\59","\220\49\197\202\67\126")]=function(v330,v331,v332) local v333=v172[v331];v333[1][v333[5 -3 ]]=v332;end});v169=2;end if (v169==2) then for v335=1,v91[4] do v83=v83 + (1 -0) ;local v336=v79[v83];if (v336[1]==70) then v172[v335-(1 + 0) ]={v89,v336[8 -5 ]};else v172[v335-1 ]={v74,v336[3]};end v88[ #v88 + 1 ]=v172;end v89[v91[2]]=v40(v170,v171,v75);break;end end elseif (v92>(35 -8)) then do return v89[v91[2]]();end else do return;end end elseif (v92<=(1220 -(1069 + 118))) then if (v92<=30) then if (v92>29) then v83=v91[3];else for v239=v91[2],v91[6 -3 ] do v89[v239]=nil;end end elseif (v92<=31) then v89[v91[2]]={};elseif (v92>32) then v89[v91[2]]= #v89[v91[3]];else local v253=0;local v254;while true do if (v253==0) then v254=v91[2];v89[v254]=v89[v254]();break;end end end elseif (v92<=35) then if (v92==34) then local v175=v91[3 -1 ];v89[v175]=v89[v175](v21(v89,v175 + 1 ,v84));else v89[v91[1 + 1 ]][v89[v91[3]]]=v89[v91[4]];end elseif (v92<=36) then local v179=v91[2];local v180=v89[v179 + (3 -1) ];local v181=v89[v179] + v180 ;v89[v179]=v181;if (v180>0) then if (v181<=v89[v179 + 1 ]) then local v338=0;while true do if (v338==0) then v83=v91[3 + 0 ];v89[v179 + 3 ]=v181;break;end end end elseif (v181>=v89[v179 + 1 ]) then local v339=0;while true do if (0==v339) then v83=v91[3];v89[v179 + 3 ]=v181;break;end end end elseif (v92>37) then local v255=0;local v256;while true do if (v255==0) then v256=v91[2];v89[v256]=v89[v256](v21(v89,v256 + 1 ,v91[3]));break;end end else v89[v91[793 -(368 + 423) ]]=v89[v91[3]]%v91[4] ;end elseif (v92<=57) then if (v92<=47) then if (v92<=42) then if (v92<=40) then if (v92>39) then v89[v91[6 -4 ]]=v91[3];else v89[v91[2]]=v74[v91[3]];end elseif (v92==41) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]=v74[v91[21 -(10 + 8) ]];end elseif (v92<=44) then if (v92>43) then local v189=0;local v190;local v191;local v192;local v193;while true do if (v189==0) then v190=v91[2];v191,v192=v82(v89[v190](v21(v89,v190 + 1 ,v84)));v189=1;end if (1==v189) then v84=(v192 + v190) -1 ;v193=0;v189=2;end if (v189==2) then for v340=v190,v84 do v193=v193 + 1 ;v89[v340]=v191[v193];end break;end end else local v194=0;local v195;local v196;local v197;local v198;while true do if (v194==0) then v195=v91[2];v196,v197=v82(v89[v195](v89[v195 + 1 ]));v194=1;end if (v194==2) then for v343=v195,v84 do local v344=0;while true do if (v344==0) then v198=v198 + (443 -(416 + 26)) ;v89[v343]=v196[v198];break;end end end break;end if (v194==1) then v84=(v197 + v195) -1 ;v198=0 -0 ;v194=2;end end end elseif (v92<=45) then local v199=0;local v200;while true do if (v199==0) then v200=v91[2];v89[v200](v21(v89,v200 + 1 ,v84));break;end end elseif (v92==46) then if (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end else local v259=v91[2];local v260,v261=v82(v89[v259](v21(v89,v259 + 1 ,v84)));v84=(v261 + v259) -(3 -2) ;local v262=0;for v306=v259,v84 do v262=v262 + 1 ;v89[v306]=v260[v262];end end elseif (v92<=52) then if (v92<=49) then if (v92>48) then local v201=0;local v202;local v203;while true do if (v201==0) then v202=v91[2];v203=v89[v91[3]];v201=1;end if (v201==1) then v89[v202 + 1 ]=v203;v89[v202]=v203[v91[4]];break;end end elseif (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=50) then local v204=0;local v205;while true do if (v204==0) then v205=v91[2];v89[v205](v21(v89,v205 + 1 + 0 ,v91[3]));break;end end elseif (v92>51) then local v264=0;local v265;while true do if (v264==0) then v265=v91[2];v89[v265](v21(v89,v265 + (1 -0) ,v91[441 -(145 + 293) ]));break;end end else for v315=v91[2],v91[3] do v89[v315]=nil;end end elseif (v92<=54) then if (v92==53) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]= #v89[v91[3]];end elseif (v92<=55) then v89[v91[2]][v89[v91[3]]]=v91[4];elseif (v92==56) then local v267=v91[432 -(44 + 386) ];do return v89[v267](v21(v89,v267 + (1487 -(998 + 488)) ,v91[3]));end else v89[v91[2]]=v89[v91[3]]%v91[4] ;end elseif (v92<=67) then if (v92<=62) then if (v92<=59) then if (v92==58) then v89[v91[2]][v89[v91[3]]]=v91[4];else v89[v91[2]]=v75[v91[3]];end elseif (v92<=60) then local v213=0;local v214;while true do if (v213==0) then v214=v91[1 + 1 ];v89[v214]=v89[v214]();break;end end elseif (v92>61) then local v269=0;local v270;local v271;local v272;local v273;while true do if (v269==0) then v270=v91[2];v271,v272=v82(v89[v270](v21(v89,v270 + 1 + 0 ,v91[3])));v269=1;end if (v269==1) then v84=(v272 + v270) -1 ;v273=0;v269=2;end if (v269==2) then for v376=v270,v84 do v273=v273 + 1 ;v89[v376]=v271[v273];end break;end end elseif (v91[774 -(201 + 571) ]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=64) then if (v92==63) then local v215=0;local v216;local v217;local v218;while true do if (v215==2) then for v347=1139 -(116 + 1022) ,v91[4] do local v348=0;local v349;while true do if (v348==0) then v83=v83 + 1 ;v349=v79[v83];v348=1;end if (1==v348) then if (v349[1]==70) then v218[v347-(4 -3) ]={v89,v349[3]};else v218[v347-1 ]={v74,v349[3]};end v88[ #v88 + 1 ]=v218;break;end end end v89[v91[2]]=v40(v216,v217,v75);break;end if (v215==0) then v216=v80[v91[3]];v217=nil;v215=1;end if (1==v215) then v218={};v217=v18({},{[v7("\248\251\87\57\95\1\223","\100\167\164\62\87\59")]=function(v350,v351) local v352=0;local v353;while true do if (v352==0) then v353=v218[v351];return v353[1][v353[2]];end end end,[v7("\191\105\78\204\240\11\39\132\83\88","\73\224\54\32\169\135\98")]=function(v354,v355,v356) local v357=v218[v355];v357[1][v357[2]]=v356;end});v215=2;end end else local v219=0;local v220;local v221;local v222;local v223;while true do if (v219==2) then for v359=v220,v84 do v223=v223 + 1 ;v89[v359]=v221[v223];end break;end if (1==v219) then v84=(v222 + v220) -1 ;v223=0 -0 ;v219=2;end if (0==v219) then v220=v91[2];v221,v222=v82(v89[v220](v21(v89,v220 + 1 ,v91[3])));v219=1;end end end elseif (v92<=65) then v89[v91[861 -(814 + 45) ]][v91[7 -4 ]]=v91[4];elseif (v92>66) then v89[v91[2]]=v89[v91[3]] + v91[4] ;elseif (v89[v91[2]]==v91[1 + 3 ]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=72) then if (v92<=69) then if (v92>68) then v89[v91[2]]=v89[v91[2 + 1 ]] + v91[4] ;else v89[v91[887 -(261 + 624) ]]=v89[v91[3]][v91[4]];end elseif (v92<=70) then v89[v91[2]]=v89[v91[3]];elseif (v92>71) then local v275=v91[2];v89[v275]=v89[v275](v21(v89,v275 + 1 ,v91[3]));else local v277=0;local v278;while true do if (v277==0) then v278=v91[2];do return v21(v89,v278,v84);end break;end end end elseif (v92<=74) then if (v92==73) then v89[v91[2]]();else v89[v91[2]]=v91[3] + v89[v91[4]] ;end elseif (v92<=(133 -58)) then v89[v91[2]][v91[3]]=v91[4];elseif (v92>76) then v89[v91[2]]=v89[v91[1083 -(1020 + 60) ]];else local v281=0;local v282;local v283;local v284;while true do if (v281==1) then v284=v89[v282 + 2 ];if (v284>0) then if (v283>v89[v282 + 1 ]) then v83=v91[3];else v89[v282 + 3 ]=v283;end elseif (v283<v89[v282 + 1 ]) then v83=v91[3];else v89[v282 + 3 ]=v283;end break;end if (0==v281) then v282=v91[2];v283=v89[v282];v281=1;end end end v83=v83 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
