local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\143\12","\101\161\34\82\182"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,2 -1 ));return "";else local v94=v10(v8(v42,45 -29 ));if v30 then local v103=v13(v94,v30);v30=nil;return v103;else return v94;end end end);local function v31(v43,v44,v45) if v45 then local v95=0;local v96;while true do if (v95==0) then v96=(v43/((3 -1)^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v96-(v96%1) ;end end else local v97=0;local v98;while true do if (v97==0) then v98=2^(v44-1) ;return (((v43%(v98 + v98))>=v98) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (1==v46) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + (4 -2) );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * (66155 -(555 + 64))) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==0) then v57=v34();v58=v34();v56=1;end if (2==v56) then v61=v31(v58,21,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end if (v56==1) then v59=1;v60=(v31(v58,1,20) * (2^32)) + v57 ;v56=2;end if (v56==3) then if (v61==(931 -(857 + 74))) then if (v60==0) then return v62 * 0 ;else v61=1;v59=0;end elseif (v61==2047) then return ((v60==(568 -(367 + 201))) and (v62 * (1/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==0) then v65=nil;if  not v63 then local v119=0;while true do if (v119==0) then v63=v34();if (v63==0) then return "";end break;end end end v64=1;end if (v64==2) then v66={};for v104=1, #v65 do v66[v104]=v10(v9(v11(v65,v104,v104)));end v64=3;end if (v64==3) then return v14(v66);end if (v64==1) then v65=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;v64=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67=0;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (0==v67) then v68={};v69={};v70={};v71={v68,v69,nil,v70};v67=1;end if (v67==1) then v72=v34();v73={};for v106=1,v72 do local v107=0;local v108;local v109;while true do if (0==v107) then v108=v32();v109=nil;v107=1;end if (v107==1) then if (v108==1) then v109=v32()~=(927 -(214 + 713)) ;elseif (v108==2) then v109=v35();elseif (v108==3) then v109=v36();end v73[v106]=v109;break;end end end v71[3]=v32();v67=2;end if (v67==2) then for v110=1 + 0 ,v34() do local v111=0;local v112;while true do if (v111==0) then v112=v32();if (v31(v112,1,1)==0) then local v121=v31(v112,2,3);local v122=v31(v112,4,6);local v123={v33(),v33(),nil,nil};if (v121==0) then local v125=0;while true do if (v125==0) then v123[3]=v33();v123[4]=v33();break;end end elseif (v121==1) then v123[1 + 2 ]=v34();elseif (v121==2) then v123[3]=v34() -(2^(893 -(282 + 595))) ;elseif (v121==3) then local v285=0;while true do if (0==v285) then v123[3]=v34() -(2^16) ;v123[1641 -(1523 + 114) ]=v33();break;end end end if (v31(v122,1,1 + 0 )==(1 -0)) then v123[2]=v73[v123[2]];end if (v31(v122,2,2)==(1066 -(68 + 997))) then v123[1273 -(226 + 1044) ]=v73[v123[3]];end if (v31(v122,12 -9 ,120 -(32 + 85) )==1) then v123[4]=v73[v123[4]];end v68[v110]=v123;end break;end end end for v113=1,v34() do v69[v113-1 ]=v39();end return v71;end end end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[2];local v79=v74[3];return function(...) local v80=v77;local v81=v78;local v82=v79;local v83=v38;local v84=1 + 0 ;local v85= -(1 + 0);local v86={};local v87={...};local v88=v20("#",...) -(958 -(892 + 65)) ;local v89={};local v90={};for v99=0,v88 do if (v99>=v82) then v86[v99-v82 ]=v87[v99 + (2 -1) ];else v90[v99]=v87[v99 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=37) then if (v93<=18) then if (v93<=8) then if (v93<=3) then if (v93<=1) then if (v93>0) then v90[v92[2]]=v75[v92[3]];else local v137=0;local v138;while true do if (v137==0) then v138=v92[2];do return v21(v90,v138,v85);end break;end end end elseif (v93>2) then local v139=0;local v140;while true do if (v139==0) then v140=v92[2];v90[v140]=v90[v140](v21(v90,v140 + 1 ,v85));break;end end else v90[v92[2]]=v92[3]~=0 ;end elseif (v93<=5) then if (v93==(6 -2)) then local v142=0;local v143;while true do if (0==v142) then v143=v92[2];v90[v143]=v90[v143](v21(v90,v143 + 1 ,v92[3]));break;end end else for v236=v92[2],v92[3] do v90[v236]=nil;end end elseif (v93<=(10 -4)) then v90[v92[2]]=v90[v92[3]];elseif (v93>(357 -(87 + 263))) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v246=v92[2];v90[v246]=v90[v246]();end elseif (v93<=13) then if (v93<=10) then if (v93>9) then v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;else v90[v92[182 -(67 + 113) ]]=v76[v92[3]];end elseif (v93<=11) then local v149=0;local v150;while true do if (v149==0) then v150=v92[2 + 0 ];v90[v150](v21(v90,v150 + 1 ,v85));break;end end elseif (v93==12) then v90[v92[4 -2 ]][v90[v92[3]]]=v90[v92[4]];else do return v90[v92[2]]();end end elseif (v93<=15) then if (v93==14) then v90[v92[2 + 0 ]]=v92[3] + v90[v92[4]] ;else v90[v92[2]]();end elseif (v93<=16) then local v152=0;local v153;while true do if (0==v152) then v153=v92[2];do return v90[v153](v21(v90,v153 + 1 ,v92[3]));end break;end end elseif (v93>17) then v84=v92[3];else local v251=0;local v252;while true do if (0==v251) then v252=v92[2];do return v21(v90,v252,v85);end break;end end end elseif (v93<=27) then if (v93<=22) then if (v93<=(79 -59)) then if (v93>19) then v90[v92[2]][v92[3]]=v92[4];else v90[v92[2]]=v90[v92[3]]%v90[v92[956 -(802 + 150) ]] ;end elseif (v93==21) then v90[v92[2]]=v75[v92[3]];else local v159=0;local v160;local v161;while true do if (v159==0) then v160=v92[2];v161=v90[v160];v159=1;end if (v159==1) then for v322=v160 + 1 ,v85 do v15(v161,v90[v322]);end break;end end end elseif (v93<=24) then if (v93==23) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v162=0;local v163;local v164;local v165;while true do if (v162==2) then for v323=1,v92[4] do local v324=0;local v325;while true do if (v324==1) then if (v325[1]==6) then v165[v323-1 ]={v90,v325[3]};else v165[v323-1 ]={v75,v325[3]};end v89[ #v89 + 1 ]=v165;break;end if (v324==0) then v84=v84 + 1 ;v325=v80[v84];v324=1;end end end v90[v92[5 -3 ]]=v40(v163,v164,v76);break;end if (v162==1) then v165={};v164=v18({},{[v7("\215\50\80\240\223\231\154","\78\136\109\57\158\187\130\226")]=function(v326,v327) local v328=0;local v329;while true do if (v328==0) then v329=v165[v327];return v329[1][v329[2]];end end end,[v7("\1\0\247\244\41\54\247\245\59\39","\145\94\95\153")]=function(v330,v331,v332) local v333=0;local v334;while true do if (v333==0) then v334=v165[v331];v334[1][v334[2]]=v332;break;end end end});v162=2;end if (v162==0) then v163=v81[v92[3]];v164=nil;v162=1;end end end elseif (v93<=25) then for v238=v92[2],v92[3] do v90[v238]=nil;end elseif (v93>26) then v90[v92[2]][v90[v92[3]]]=v90[v92[4]];else local v256=v92[3 -1 ];local v257=v90[v256];for v297=v256 + 1 ,v85 do v15(v257,v90[v297]);end end elseif (v93<=32) then if (v93<=29) then if (v93>28) then v90[v92[2]]=v90[v92[3]];else local v168=v92[2];local v169,v170=v83(v90[v168](v21(v90,v168 + 1 ,v92[3])));v85=(v170 + v168) -1 ;local v171=0;for v240=v168,v85 do local v241=0;while true do if (v241==0) then v171=v171 + 1 ;v90[v240]=v169[v171];break;end end end end elseif (v93<=30) then v84=v92[3];elseif (v93==(23 + 8)) then do return;end else v90[v92[2]]=v90[v92[3]][v92[4]];end elseif (v93<=34) then if (v93>33) then v90[v92[2]]=v90[v92[3]] + v92[4] ;elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=35) then local v174=v92[2];local v175,v176=v83(v90[v174](v90[v174 + 1 ]));v85=(v176 + v174) -(998 -(915 + 82)) ;local v177=0;for v242=v174,v85 do local v243=0;while true do if (v243==0) then v177=v177 + 1 ;v90[v242]=v175[v177];break;end end end elseif (v93==36) then local v261=0;local v262;local v263;local v264;while true do if (2==v261) then if (v263>0) then if (v264<=v90[v262 + 1 ]) then v84=v92[8 -5 ];v90[v262 + 3 ]=v264;end elseif (v264>=v90[v262 + 1 ]) then local v397=0;while true do if (v397==0) then v84=v92[3];v90[v262 + 3 ]=v264;break;end end end break;end if (v261==0) then v262=v92[2];v263=v90[v262 + 2 ];v261=1;end if (v261==1) then v264=v90[v262] + v263 ;v90[v262]=v264;v261=2;end end else local v265=v92[2];local v266=v90[v265];local v267=v90[v265 + 2 ];if (v267>0) then if (v266>v90[v265 + 1 ]) then v84=v92[3];else v90[v265 + 3 ]=v266;end elseif (v266<v90[v265 + 1 ]) then v84=v92[3];else v90[v265 + 3 ]=v266;end end elseif (v93<=56) then if (v93<=46) then if (v93<=41) then if (v93<=39) then if (v93>38) then local v178=0;local v179;local v180;local v181;local v182;while true do if (v178==0) then v179=v92[2];v180,v181=v83(v90[v179](v21(v90,v179 + 1 ,v92[3])));v178=1;end if (v178==2) then for v339=v179,v85 do local v340=0;while true do if (v340==0) then v182=v182 + 1 ;v90[v339]=v180[v182];break;end end end break;end if (v178==1) then v85=(v181 + v179) -1 ;v182=0;v178=2;end end else local v183=0;local v184;while true do if (v183==0) then v184=v92[2];do return v90[v184](v21(v90,v184 + 1 ,v92[3]));end break;end end end elseif (v93==40) then v90[v92[2]][v92[3]]=v92[4];else v90[v92[2 + 0 ]]=v92[3]~=0 ;end elseif (v93<=43) then if (v93>42) then v90[v92[2]]={};else local v189=0;local v190;local v191;local v192;local v193;while true do if (v189==2) then for v341=v190,v85 do local v342=0;while true do if (v342==0) then v193=v193 + 1 ;v90[v341]=v191[v193];break;end end end break;end if (v189==1) then v85=(v192 + v190) -(1 -0) ;v193=0;v189=2;end if (v189==0) then v190=v92[2];v191,v192=v83(v90[v190](v90[v190 + 1 ]));v189=1;end end end elseif (v93<=44) then local v194=v92[2];local v195,v196=v83(v90[v194](v21(v90,v194 + 1 ,v85)));v85=(v196 + v194) -1 ;local v197=0;for v244=v194,v85 do local v245=0;while true do if (v245==0) then v197=v197 + 1 ;v90[v244]=v195[v197];break;end end end elseif (v93>45) then v90[v92[2]][v90[v92[1190 -(1069 + 118) ]]]=v92[8 -4 ];else local v270=0;local v271;while true do if (v270==0) then v271=v92[3 -1 ];v90[v271]=v90[v271](v21(v90,v271 + 1 ,v85));break;end end end elseif (v93<=(9 + 42)) then if (v93<=48) then if (v93==47) then local v198=0;local v199;while true do if (v198==0) then v199=v92[2];v90[v199](v21(v90,v199 + 1 ,v92[3]));break;end end else local v200=0;local v201;local v202;while true do if (v200==1) then v90[v201 + 1 ]=v202;v90[v201]=v202[v92[4]];break;end if (v200==0) then v201=v92[2];v202=v90[v92[3]];v200=1;end end end elseif (v93<=49) then v90[v92[2]]=v92[4 -1 ];elseif (v93==(50 + 0)) then local v272=v92[2];v90[v272](v21(v90,v272 + 1 ,v85));elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[794 -(368 + 423) ];end elseif (v93<=53) then if (v93>52) then v90[v92[2]]=v90[v92[3]][v92[4]];else v90[v92[6 -4 ]]={};end elseif (v93<=54) then local v208=0;local v209;while true do if (v208==0) then v209=v92[2];v90[v209]=v90[v209]();break;end end elseif (v93>55) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]=v92[3] + v90[v92[4]] ;end elseif (v93<=65) then if (v93<=60) then if (v93<=58) then if (v93==57) then do return;end else v90[v92[2]]= #v90[v92[21 -(10 + 8) ]];end elseif (v93>59) then do return v90[v92[2]]();end else local v211=0;local v212;local v213;local v214;local v215;while true do if (v211==0) then v212=v92[2];v213,v214=v83(v90[v212](v21(v90,v212 + 1 ,v85)));v211=1;end if (v211==1) then v85=(v214 + v212) -(3 -2) ;v215=0;v211=2;end if (v211==2) then for v347=v212,v85 do local v348=0;while true do if (v348==0) then v215=v215 + 1 ;v90[v347]=v213[v215];break;end end end break;end end end elseif (v93<=62) then if (v93==61) then v90[v92[2]]=v90[v92[3]] + v92[4] ;else local v217=0;local v218;local v219;local v220;while true do if (v217==1) then v220=v90[v218] + v219 ;v90[v218]=v220;v217=2;end if (v217==2) then if (v219>0) then if (v220<=v90[v218 + 1 ]) then local v387=0;while true do if (v387==0) then v84=v92[3];v90[v218 + 3 ]=v220;break;end end end elseif (v220>=v90[v218 + 1 ]) then local v388=0;while true do if (v388==0) then v84=v92[3];v90[v218 + 3 ]=v220;break;end end end break;end if (v217==0) then v218=v92[2];v219=v90[v218 + (444 -(416 + 26)) ];v217=1;end end end elseif (v93<=63) then local v221=v92[6 -4 ];v90[v221]=v90[v221](v21(v90,v221 + 1 ,v92[2 + 1 ]));elseif (v93==64) then v90[v92[2]]();else v90[v92[2]]= #v90[v92[3]];end elseif (v93<=70) then if (v93<=67) then if (v93>66) then local v223=0;local v224;local v225;while true do if (v223==1) then v90[v224 + 1 ]=v225;v90[v224]=v225[v92[4]];break;end if (v223==0) then v224=v92[2];v225=v90[v92[3]];v223=1;end end elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=68) then v90[v92[3 -1 ]]=v92[3];elseif (v93>69) then v90[v92[2]][v90[v92[3]]]=v92[4];else v90[v92[2]]=v90[v92[3]]%v92[4] ;end elseif (v93<=72) then if (v93==71) then v90[v92[2]]=v90[v92[3]]%v92[4] ;else local v229=0;local v230;local v231;local v232;while true do if (v229==0) then v230=v92[2];v231=v90[v230];v229=1;end if (v229==1) then v232=v90[v230 + 2 ];if (v232>0) then if (v231>v90[v230 + (439 -(145 + 293)) ]) then v84=v92[3];else v90[v230 + 3 ]=v231;end elseif (v231<v90[v230 + 1 ]) then v84=v92[3];else v90[v230 + 3 ]=v231;end break;end end end elseif (v93<=73) then v90[v92[2]]=v76[v92[3]];elseif (v93==74) then local v279=0;local v280;while true do if (v279==0) then v280=v92[2];v90[v280](v21(v90,v280 + 1 ,v92[433 -(44 + 386) ]));break;end end else local v281=0;local v282;local v283;local v284;while true do if (v281==1) then v284={};v283=v18({},{[v7("\194\242\29\219\74\178\229","\215\157\173\116\181\46")]=function(v364,v365) local v366=0;local v367;while true do if (v366==0) then v367=v284[v365];return v367[1][v367[2]];end end end,[v7("\10\139\133\247\205\60\186\143\247\194","\186\85\212\235\146")]=function(v368,v369,v370) local v371=0;local v372;while true do if (v371==0) then v372=v284[v369];v372[1][v372[1488 -(998 + 488) ]]=v370;break;end end end});v281=2;end if (v281==2) then for v373=1,v92[4] do local v374=0;local v375;while true do if (v374==1) then if (v375[1]==6) then v284[v373-1 ]={v90,v375[3]};else v284[v373-1 ]={v75,v375[3]};end v89[ #v89 + 1 ]=v284;break;end if (v374==0) then v84=v84 + 1 ;v375=v80[v84];v374=1;end end end v90[v92[2]]=v40(v282,v283,v76);break;end if (v281==0) then v282=v81[v92[3]];v283=nil;v281=1;end end end v84=v84 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- Ого что это мы тут ищем?
