--Free source, yay
getgenv().Resolution = 1

local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ScreenStretchGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 300, 0, 200)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.ClipsDescendants = true
mainFrame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = mainFrame

local headerFrame = Instance.new("Frame")
headerFrame.Name = "Header"
headerFrame.Size = UDim2.new(1, 0, 0, 50)
headerFrame.Position = UDim2.new(0, 0, 0, 0)
headerFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 60)
headerFrame.BorderSizePixel = 0
headerFrame.Parent = mainFrame

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 12)
headerCorner.Parent = headerFrame

local headerBottom = Instance.new("Frame")
headerBottom.Size = UDim2.new(1, 0, 0, 12)
headerBottom.Position = UDim2.new(0, 0, 1, -12)
headerBottom.BackgroundColor3 = Color3.fromRGB(45, 45, 60)
headerBottom.BorderSizePixel = 0
headerBottom.Parent = headerFrame

local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, -80, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Stretching the Screen"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.Font = Enum.Font.GothamBold
title.Parent = headerFrame

local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -40, 0, 10)
minimizeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
minimizeButton.BorderSizePixel = 0
minimizeButton.Text = "−"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextScaled = true
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.Parent = headerFrame

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(0, 6)
minimizeCorner.Parent = minimizeButton

local contentFrame = Instance.new("Frame")
contentFrame.Name = "Content"
contentFrame.Size = UDim2.new(1, 0, 1, -50)
contentFrame.Position = UDim2.new(0, 0, 0, 50)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

local watermark = Instance.new("TextLabel")
watermark.Name = "Watermark"
watermark.Size = UDim2.new(1, -20, 0, 25)
watermark.Position = UDim2.new(0, 10, 0, 10)
watermark.BackgroundTransparency = 1
watermark.Text = "t.me/CapyExploits"
watermark.TextColor3 = Color3.fromRGB(150, 150, 150)
watermark.TextScaled = true
watermark.Font = Enum.Font.Gotham
watermark.Parent = contentFrame

local sliderFrame = Instance.new("Frame")
sliderFrame.Name = "SliderFrame"
sliderFrame.Size = UDim2.new(1, -40, 0, 60)
sliderFrame.Position = UDim2.new(0, 20, 0, 50)
sliderFrame.BackgroundTransparency = 1
sliderFrame.Parent = contentFrame

local sliderBG = Instance.new("Frame")
sliderBG.Name = "SliderBG"
sliderBG.Size = UDim2.new(1, 0, 0, 8)
sliderBG.Position = UDim2.new(0, 0, 0.5, -4)
sliderBG.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
sliderBG.BorderSizePixel = 0
sliderBG.Active = true
sliderBG.Parent = sliderFrame

local sliderBGCorner = Instance.new("UICorner")
sliderBGCorner.CornerRadius = UDim.new(0, 4)
sliderBGCorner.Parent = sliderBG

local sliderFill = Instance.new("Frame")
sliderFill.Name = "SliderFill"
sliderFill.Size = UDim2.new(1, 0, 1, 0)
sliderFill.Position = UDim2.new(0, 0, 0, 0)
sliderFill.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
sliderFill.BorderSizePixel = 0
sliderFill.Parent = sliderBG

local sliderFillCorner = Instance.new("UICorner")
sliderFillCorner.CornerRadius = UDim.new(0, 4)
sliderFillCorner.Parent = sliderFill

local sliderHandle = Instance.new("Frame")
sliderHandle.Name = "SliderHandle"
sliderHandle.Size = UDim2.new(0, 20, 0, 20)
sliderHandle.Position = UDim2.new(1, -10, 0.5, -10)
sliderHandle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sliderHandle.BorderSizePixel = 0
sliderHandle.Active = true
sliderHandle.Parent = sliderFrame

local handleCorner = Instance.new("UICorner")
handleCorner.CornerRadius = UDim.new(0, 10)
handleCorner.Parent = sliderHandle

local resetButton = Instance.new("TextButton")
resetButton.Name = "ResetButton"
resetButton.Size = UDim2.new(0, 100, 0, 35)
resetButton.Position = UDim2.new(0.5, -50, 0, 115)
resetButton.BackgroundColor3 = Color3.fromRGB(80, 120, 200)
resetButton.BorderSizePixel = 0
resetButton.Text = "Reset"
resetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
resetButton.TextScaled = true
resetButton.Font = Enum.Font.GothamBold
resetButton.Parent = contentFrame

local resetCorner = Instance.new("UICorner")
resetCorner.CornerRadius = UDim.new(0, 8)
resetCorner.Parent = resetButton

local isMinimized = false
local connection

local function startConnection()
    if connection then
        connection:Disconnect()
    end
    connection = RunService.RenderStepped:Connect(function()
        Camera.CFrame = Camera.CFrame * CFrame.new(0, 0, 0, 1, 0, 0, 0, getgenv().Resolution, 0, 0, 0, 1)
    end)
end

startConnection()

local function updateSlider(value)
    getgenv().Resolution = value
    local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    TweenService:Create(sliderFill, tweenInfo, {Size = UDim2.new(value, 0, 1, 0)}):Play()
    TweenService:Create(sliderHandle, tweenInfo, {Position = UDim2.new(value, -10, 0.5, -10)}):Play()
end

local dragging = false

sliderBG.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        local sliderPosition = sliderBG.AbsolutePosition.X
        local sliderSize = sliderBG.AbsoluteSize.X
        local mouseX = input.Position.X
        local relativeX = (mouseX - sliderPosition) / sliderSize
        relativeX = math.clamp(relativeX, 0, 1)
        updateSlider(relativeX)
    end
end)

sliderHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local sliderPosition = sliderBG.AbsolutePosition.X
        local sliderSize = sliderBG.AbsoluteSize.X
        local mouseX = input.Position.X
        local relativeX = (mouseX - sliderPosition) / sliderSize
        relativeX = math.clamp(relativeX, 0, 1)
        updateSlider(relativeX)
    end
end)

resetButton.MouseButton1Click:Connect(function()
    if connection then
        connection:Disconnect()
        connection = nil
    end
    getgenv().Resolution = 1
    updateSlider(1)
    wait(0.1)
    startConnection()
end)

minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    
    if isMinimized then
        minimizeButton.Text = "+"
        TweenService:Create(mainFrame, tweenInfo, {Size = UDim2.new(0, 300, 0, 50)}):Play()
    else
        minimizeButton.Text = "−"
        TweenService:Create(mainFrame, tweenInfo, {Size = UDim2.new(0, 300, 0, 200)}):Play()
    end
end)
